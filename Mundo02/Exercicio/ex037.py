def ex037():
    # Escreva um programa que leia um n√∫mero inteiro qualquer
    # e pe√ßa para o usu√°rio escolher qual ser√° a base de convers√£o:
    # 1- bin√°rio 2- octal 3- hexadecimal

    from random import randint

    from colorama import Fore, Style
    from emoji import emojize

    def separador():
        print(Fore.CYAN + "=-" * 20 + Style.RESET_ALL)

    def obter_modo(auto=False):
        if auto:
            return randint(1, 100), randint(1, 3)  # nosec
        else:
            while True:
                try:
                    numero = int(input("Digite um n√∫mero inteiro: "))
                    print("Escolha a base de convers√£o:")
                    print("1 - Bin√°rio\n2 - Octal\n3 - Hexadecimal")
                    base = int(input("Sua escolha: "))
                    if base not in [1, 2, 3]:
                        raise ValueError
                    return numero, base
                except ValueError:
                    print(
                        Fore.RED
                        + "‚ùå Entrada inv√°lida. Tente novamente."
                        + Style.RESET_ALL
                    )

    def conversao_base(numero, base):
        print(Fore.YELLOW + emojize("üî¢ Convers√£o de Base Num√©rica"))
        print(Fore.YELLOW + emojize(f"üî¢ N√∫mero: {numero}"))
        print(Fore.YELLOW + emojize(f"üî¢ Base escolhida: {base}"))
        if base == 1:
            return bin(numero)[2:]
        elif base == 2:
            return oct(numero)[2:]
        elif base == 3:
            return hex(numero)[2:]
        else:
            raise ValueError("Base inv√°lida.")

    separador()
    modo = obter_modo(auto=True)
    numero, base = modo
    resultado = conversao_base(numero, base)
    print(Fore.GREEN + emojize(f"üì§ Resultado da convers√£o: {resultado}"))
    separador()
    print(Fore.YELLOW + emojize("üëã At√© a pr√≥xima!") + Style.RESET_ALL)


ex037()
